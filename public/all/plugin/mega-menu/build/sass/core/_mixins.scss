// Mixins
//
// Copy settings from this file into the provided `_custom.scss` to override

// Animation Performance
@mixin performance() {
	perspective: 1000px;
}

// Typography
@mixin font-size($size: 14) {
	font-size: ($size / $root-font-size) + rem !important;
}

@mixin line-height($size: 14) {
	line-height: ($size / $root-font-size) + rem !important;
}

// Colors
@mixin placeholder-color($color) {
	&::-webkit-input-placeholder {
		color: $color;
	}

	&::-moz-placeholder {
		color: $color;
	}

	&:-ms-input-placeholder {
		color: $color;
	}
}

// Gradients
@mixin gradient-bg($color) {
  @if $enable-gradients {
    background: $color linear-gradient(180deg, mix($body-bg, $color, 15%), $color) repeat-x !important;
  }
  
  @else {
    background-color: $color;
  }
}

@mixin gradient-x($start-color: $gray-700, $end-color: $gray-800, $start-percent: 0%, $end-percent: 100%) {
  background-image: linear-gradient(to right, $start-color $start-percent, $end-color $end-percent) !important;
  background-repeat: repeat-x;
}

@mixin gradient-y($start-color: $gray-700, $end-color: $gray-800, $start-percent: 0%, $end-percent: 100%) {
  background-image: linear-gradient(to bottom, $start-color $start-percent, $end-color $end-percent) !important;
  background-repeat: repeat-x;
}

@mixin gradient-directional($start-color: $gray-700, $end-color: $gray-800, $deg: 45deg) {
  background-image: linear-gradient($deg, $start-color, $end-color) !important;
  background-repeat: repeat-x;
}

@mixin gradient-radial($inner-color: $gray-700, $outer-color: $gray-800) {
  background-image: radial-gradient(circle, $inner-color, $outer-color) !important;
  background-repeat: no-repeat;
}

@mixin gradient-striped($color: rgba($white, .15), $angle: 45deg) {
  background-image: linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent) !important;
}

// Clearfix
@mixin clearfix {
	&::after {
		clear: both;
		content: "";
		display: block;
	}
}

// Media Breakpoints
@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
	$min: breakpoint-min($name, $breakpoints);
	
	@if $min {
		@media (min-width: $min) {
      @content;
    }
  }
  
  @else {
	  @content;
	}
}

// Flexbox
@mixin flexbox($grow, $shrink, $basis) {
	-webkit-box-flex: $grow;
  -ms-flex: $grow $shrink $basis;
  flex: $grow $shrink $basis;
  max-width: $basis;
}