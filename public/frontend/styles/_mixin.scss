@mixin flex_row($content: center) {
    display: flex;
    flex-flow: row wrap;
    justify-content: $content;
}

@mixin flex_col($content: center) {
    display: flex;
    flex-flow: column wrap;
    justify-content: $content;
}

@mixin elment_fix($pos: relative) {
    display: block;
    width: 100%;
    @if ($pos !='') {
        position: relative;
    }
}

@mixin bg_image($url, $size: cover, $repeat: no-repeat, $position: center) {
    @if($url !='') {
        background: {
            image: url($url);
            position: $position;
            repeat: $repeat;
            size: $size;
        }
    }
}

@mixin pos_tl($width, $height, $top: 0, $left: 0, $position: absolute) {
    position: $position;
    width: $width;
    height: $height;
    top: $top;
    left: $left;
}

@mixin pos_tr($width, $height, $top: 0, $right: 0, $position: absolute) {
    position: $position;
    width: $width;
    height: $height;
    top: $top;
    right: $right;
}

@mixin pos_bl($width, $height, $bottom: 0, $left: 0, $position: absolute) {
    position: $position;
    width: $width;
    height: $height;
    bottom: $bottom;
    left: $left;
}

@mixin pos_br($width, $height, $bottom: 0, $right: 0, $position: absolute) {
    position: $position;
    width: $width;
    height: $height;
    bottom: $bottom;
    right: $right;
}

@mixin bg_opacity($color, $opacity) {
    background: $color;
    background: rgba($color, $opacity);
}


@mixin transition($time: .3s) {
    -ms-transition: all $time cubic-bezier(0.26, 0.1, 0.27, 1.55);
    -webkit-transition: all $time cubic-bezier(0.26, 0.1, 0.27, 1.55);
    transition: all $time cubic-bezier(0.26, 0.1, 0.27, 1.55);
}

@mixin transform ($animation: rotate(45deg)) {
    -ms-transform: $animation;
    -webkit-transform: $animation;
    transform: $animation;
}

@mixin respond-to($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
        @media (max-width: map-get($breakpoints, $breakpoint)) {
            @content;
        }
    }

    @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        +"Available breakpoints are: #{map-keys($breakpoints)}.";
    }
}

@mixin attr-x($attr, $attr-count: 10, $attr-steps: 10, $unit: '%') {
    $attr-list: null;

    @for $i from 1 through $attr-count {
        $attr-value: $attr-steps * $i;

        .#{$attr}#{$attr-value} {
            #{$attr}: #{$attr-value}#{$unit};
        }

        $attr-list: append($attr-list, unquote(".#{$attr}-#{$attr-value}"), comma);
    }
}
